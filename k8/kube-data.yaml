apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: blueapp
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  labels:
    app: blueapp
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
data:
  postgresql.conf: |
    # Put your PostgreSQL configuration here
    listen_addresses = '*'
    max_connections = 100
    shared_buffers = 1GB
    work_mem = 4MB
    maintenance_work_mem = 256MB
    effective_cache_size = 2GB
    wal_buffers = 16MB
    checkpoint_completion_target = 0.9
    wal_level = replica
    archive_mode = off
    max_wal_size = 2GB
    min_wal_size = 1GB
    effective_io_concurrency = 200
    random_page_cost = 1.1
    log_destination = 'stderr'
    logging_collector = off
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blueapp
  labels:
    app: blueapp-db
spec:
  selector:
    matchLabels:
      app: blueapp-db
  replicas: 1
  template:
    metadata:
      labels:
        app: blueapp-db
    spec:
      containers:
      - name: blueapp-db
        image: bule-data-v2
        imagePullPolicy: Never
        ports:
        - containerPort: 5432
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: postgres-pv-claim
      - name: config-volume
        configMap:
            name: postgresql-config
---
apiVersion: v1
kind: Service
metadata:
  name: blueapp-db
  labels:
    app: blueapp
spec:
    selector: 
      app: blueapp-db
    type: NodePort
    ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30432
