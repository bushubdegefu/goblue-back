version: '3'
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:443"
      - "--entrypoints.comp.address=:80"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=false"
    ports:
      # The HTTPS port
      - "443:443"
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  
  goblue:
    # A container that exposes an API to show its IP address
    image: traefik/goblue
    scale: 2
    build:
      context: .
      dockerfile: goblue.Dockerfile
    ports:
      - 5500
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.goblue.rule=Host(`goblue.localhost`)"
      - "traefik.http.routers.goblue.entrypoints=web"
      - "traefik.tls.stores.default.defaultgeneratedcert.resolver=myresolver"
      - "traefik.tls.stores.default.defaultgeneratedcert.domain.main=goblue.localhost"
      - "traefik.tls.stores.default.defaultgeneratedcert.domain.sans=goblue.localhost"
      - "traefik.http.routers.goblue.tls.certresolver=myresolver"
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: fiberprometheus
    ports:
      - 9090
    depends_on:
      - goblue
    links:
      - goblue
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=comp"
  fibergrafana:
    image: grafana/grafana:8.5.27
    restart: unless-stopped
    user: "472"
    container_name: fibergrafana
    depends_on:
      - prometheus
    ports:
      - 3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fibergrafana.rule=Host(`fibergrafana.localhost`)"
      - "traefik.http.routers.fibergrafana.entrypoints=comp"
    env_file:
      - ./config.monitoring